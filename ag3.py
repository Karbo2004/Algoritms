#двигаться можно только вниз и вправо, при этом робот должен дойти до конца
# если у робота препятствие на начальной точке вернем 0
# при этом мы можем продвигатся по свободным клеткам с нулевым значением
# записываем сколько способов мы можем использовать , по окончанию, возвращаем значение правой точки
# сложность = O
class Solution:
    def uniquePathsWithObstacles(obstacleGrid):
        if obstacleGrid[0][0]:                     # припятствие в точке
            return 0                               # возвращаем 0
        x = len(obstacleGrid)                      # вводим переменную х
        y = len(obstacleGrid[0])                   # вводим переменную у
        arr = [[0] * y for el in range(x)]         # вводим значение первой клетки
        arr[0][0] = 1                              # всего один раз можно добраться до первой клетки
        for i in range(x):                         # смотрим строку
            for j in range(y):                     # смотрим столбец
                if (obstacleGrid[i][j]) or (i == 0 and j == 0):     # значения переменных =  0
                    continue
                arr[i][j] = (arr[i - 1][j] if i else 0) + (arr[i][j - 1] if j else 0)     # сколлько раз можно дойти до ячейки(вариации)
        return arr[x - 1][y - 1]