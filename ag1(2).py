# после того как ввел счетчик смотрю матрицу, и если ее пзначение 0, то возвращаю счетчик
# смотрю все элементы в строке и столбце и если они равны 0 то ищем дальше
# каждые 0 переменные я заменяю на значения, которые будут соответствовать квадрату
# возвращаю значения в счетчик и возвращаю его где будут готовые значения квадратов
# сложность = O

class Solution:
    def countSquares(self):
        counter = 0                                 # счетчик = 0
        rowl = len(matrix)                          # переменная для строки
        if rowl == 0:                               # строка = 0
            return counter                          # вернем счетчик
        coll = len(matrix[0])                       # переменная для столбца
        for r in range(rowl):                       # смотрим каждый элемент в строке
            for j in range(coll):                   # смотрим каждый элемент в столбце
                a, b, c = 0, 0, 0                   # 0 произвольные переменные
                if matrix[r][j] == 0:               # матрица = 0
                    continue                        # ищем элементы
                if r - 1 >= 0:                      # если в соседней строке число 0
                    a = matrix[r-1][j]              # меняю переменную на значение в другой строке
                if j - 1 >= 0:                      # число в соседнем стобце 0
                    b = matrix[r][j-1]              # меняюем переменную на значение в другом столбце
                if j - 1 >= 0 and  r - 1 >= 0:      # если число в крайнем столбце и строке = 0
                    c = matrix[r-1][j-1]            # меняю переменную на значение в матрице
                matrix[r][j] += min(a, b, c)        # подставляю в значение матрицы самые наименьшие значения
                counter += matrix[r][j]             # в счетчик добавлю количество подматриц
        return counter                              # влзвращаю счетчик со общим значением всех квадратов